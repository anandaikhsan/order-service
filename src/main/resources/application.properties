# Database configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/events_db
quarkus.datasource.jdbc.max-size=16

# Hibernate ORM configuration
# Re-create the database schema on each startup
quarkus.hibernate-orm.schema-management.strategy=drop-and-create

# The script will be automatically picked up
quarkus.hibernate-orm.sql-load-script=import.sql

# Redis configuration
quarkus.redis.hosts=redis://localhost:6379

# Kafka configuration
kafka.bootstrap.servers=localhost:9092
mp.messaging.outgoing.seat-locked.connector=smallrye-kafka
mp.messaging.outgoing.seat-locked.topic=seat-locked
mp.messaging.outgoing.seat-locked.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

mp.messaging.outgoing.payment-confirmed.connector=smallrye-kafka
mp.messaging.outgoing.payment-confirmed.topic=payment-confirmed
mp.messaging.outgoing.payment-confirmed.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

mp.messaging.incoming.seat-locked-in.connector=smallrye-kafka
mp.messaging.incoming.seat-locked-in.topic=seat-locked
mp.messaging.incoming.seat-locked-in.value.deserializer=dto.SeatLockedDeserializer
mp.messaging.incoming.seat-locked-in.value.deserializer.type=dto.SeatLockedEvent
mp.messaging.incoming.seat-locked-in.auto.offset.reset=earliest
mp.messaging.incoming.seat-locked-in.broadcast=true

mp.messaging.incoming.payment-confirmed-in.connector=smallrye-kafka
mp.messaging.incoming.payment-confirmed-in.topic=payment-confirmed
mp.messaging.incoming.payment-confirmed-in.value.deserializer=dto.PaymentConfirmedDeserializer
mp.messaging.incoming.payment-confirmed-in.value.deserializer.type=dto.PaymentConfirmedEvent
mp.messaging.incoming.payment-confirmed-in.auto.offset.reset=earliest
mp.messaging.incoming.payment-confirmed-in.broadcast=true

# Logging configuration
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.category."service.EventDataLoader".level=DEBUG

# Application configuration
quarkus.application.name=order-service
quarkus.http.port=8080

quarkus.rest-client.order-api.url=http://localhost:8080
quarkus.rest-client.order-api.scope=jakarta.inject.Singleton
